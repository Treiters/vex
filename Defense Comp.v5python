{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_motor_a = Motor(Ports.PORT11, GearSetting.RATIO_6_1, False)\nleft_motor_b = Motor(Ports.PORT16, GearSetting.RATIO_6_1, False)\nleft_drive_smart = MotorGroup(left_motor_a, left_motor_b)\nright_motor_a = Motor(Ports.PORT12, GearSetting.RATIO_6_1, True)\nright_motor_b = Motor(Ports.PORT17, GearSetting.RATIO_6_1, True)\nright_drive_smart = MotorGroup(right_motor_a, right_motor_b)\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 319.19, 295, 40, MM, 0.16666666666666666)\near = Motor(Ports.PORT13, GearSetting.RATIO_18_1, False)\near2 = Motor(Ports.PORT14, GearSetting.RATIO_18_1, False)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\nclass Constants:\n  \"\"\"\n  Arena is 12 ft x 12 ft\n  6 tiles x 6 tiles\n  Tile is 2 ft x 2 ft\n\n  Arena can be represented as 6 x 6 array (0, 1, 2, 3, 4, 5)\n  Origin as left corner of our side of arena\npo\n  Robots start facing opposite side of arena\n\n  This class is mainly just for stuff to remember\n  \"\"\"\n  tile_length = 24 # Side length of square tile (inches) in arena\n  arena_tiles_length = 6  # Amount of tiles in length of arena\n  arena_size = arena_tiles_length * tile_length  # Side length of square arena\n  arena_grid = 6, 6\n  robot_attack_start = 6, 1  # Attacking robot (opponent goal on their side)\n  robot_defend_start = 6, 4  # Defending robot (our goal on their side)\n\ndrivetrain.set_drive_velocity(1000, PERCENT)\ndrivetrain.set_turn_velocity(1000, PERCENT)\n\ndef full_open_ears():\n    ear.spin_for(FORWARD, 30, DEGREES)\n    ear2.spin_for(FORWARD, 30, DEGREES)\n\ndef half_open_ears():\n    ear.spin_for(FORWARD, 15, DEGREES)\n    ear2.spin_for(FORWARD, 15, DEGREES)\n\ndef half_close_ears():\n    ear.spin_for(FORWARD, -15, DEGREES)\n    ear2.spin_for(FORWARD, -15, DEGREES)\n\ndef full_close_ears():\n    ear.spin_for(FORWARD, -30, DEGREES)\n    ear2.spin_for(FORWARD, -30, DEGREES)\n\ndef pre_autonomous():\n    # actions to do when the program starts\n    brain.screen.clear_screen()\n    brain.screen.print(\"Pre Autonomous Code\")\n    wait(1, SECONDS)\n\ndef autonomous():\n    # brain.screen.clear_screen()\n    # brain.screen.print(\"Autonomous Code\")\n    # drivetrain.drive_for(FORWARD, 3,INCHES)\n    # drivetrain.turn_for(LEFT, 45, DEGREES)\n    # drivetrain.drive_for(FORWARD, 0.33, INCHES)\n    # drivetrain.drive_for(REVERSE, 1, INCHES)\n\n    brain.screen.print(\"Auton start\")\n    drivetrain.drive_for(FORWARD, 8, INCHES)\n    drivetrain.drive_for(FORWARD, 20, INCHES)\n    ear.spin_for(FORWARD, 180, DEGREES)\n    ear2.spin_for(FORWARD, 180, DEGREES)\n    drivetrain.turn_for(LEFT, 90, DEGREES)\n    drivetrain.drive_for(FORWARD, 4, INCHES)\n    drivetrain.drive_for(REVERSE, 10, INCHES)\n    brain.screen.print(\"Auton end\")\n\ndef user_control():\n    brain.screen.clear_screen()\n    # place driver control in this while loop\n    while True:\n        wait(20, MSEC)\n# create competition instance\n\ncomp = Competition(user_control, autonomous)\npre_autonomous()\n# autonomous()","textLanguage":"python","rconfig":[{"port":[11,16,12,17,0],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio6_1","gearRatio":"1:6","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[13],"name":"ear","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[14],"name":"ear2","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.5","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}